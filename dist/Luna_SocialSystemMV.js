//=============================================================================
// Luna_SocialSystemMV.js
//=============================================================================
//=============================================================================
// Build Date: 2020-11-29 17:37:50
//=============================================================================
//=============================================================================
// Made with LunaTea -- Haxe
//=============================================================================

/** ============================================================================
 *
 *  Luna_SocialSystemMV.js
 * 
 *  Build Date: 11/29/2020
 * 
 *  Made with LunaTea -- Haxe
 *
 * =============================================================================
*/
// Generated by Haxe 4.1.3
/*:
@author LunaTechs - Kino
@plugindesc A plugin that adds a social system to RPGMakerMV/MZ <LunaSocialSys>.

@target MV MZ


@param socialSystemTitle
@text Social System Title
@desc The title text in the social system scene.
@default Contact Book


@param backgroundPicture
@text Background Picture
@desc The name of the background image in the social system scene.
@default Translucent

@param maxColumns
@text Max Columns
@desc The number of columns in the map list window.
@default 2

@param gaugeHeight
@text Gauge Height
@desc The height of the gauge in the social system scenes.
@default 35

@param gaugeColor1
@text GaugeColor1
@desc Color of the gauge when someone likes you uses window text colors.
@default 3

@param gaugeColor2
@text GaugeColor2
@desc Second color of the gauge when someone likes you uses window text colors.
@default 27

@param negativeGaugeColor1
@text Negative Gauge Color 2
@desc The color of the gauge when someone dislikes you.
@default

@param negativeGaugeColor2
@text Negative Gauge Color 2
@desc Second color of the gauge when someone dislikes you.
@default

@help
==== How To Use ====

To use it, use the below notetag in item notebox to qualify that item as a case file.


Add the case file note tag to an item in the database to have it appear
in the case file screen.

How to Call the scene?
LunaCaseFiles.gotoCaseFileScene()

MIT License
Copyright (c) 2020 LunaTechsDev
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE
*/

(function ($hx_exports, $global) {
  "use strict"
  var $estr = function () {
      return js_Boot.__string_rec(this, "");
    },
    $hxEnums = $hxEnums || {}
  class EReg {
    constructor(r, opt) {
      this.r = new RegExp(r, opt.split("u").join(""))
    }
    match(s) {
      if (this.r.global) {
        this.r.lastIndex = 0
      }
      this.r.m = this.r.exec(s)
      this.r.s = s
      return this.r.m != null;
    }
  }

  EReg.__name__ = true
  class LunaSocialSys {
    static main() {
      let _g = []
      let _g1 = 0
      let _g2 = $plugins
      while (_g1 < _g2.length) {
        let v = _g2[_g1]
        ++_g1
        if (new EReg("<LunaSocialSys>", "ig").match(v.description)) {
          _g.push(v)
        }
      }
      let plugin = _g[0]
      let params = plugin.parameters
      let tmp = parseInt(params["maxColumns"], 10)
      let tmp1 = parseInt(params["gaugeHeight"], 10)
      let tmp2 = parseInt(params["gaugeColor1"], 10)
      let tmp3 = parseInt(params["gaugeColor2"], 10)
      let tmp4 = parseInt(params["guageColor1"], 10)
      LunaSocialSys.Params = {
        socialSystemTitle: params["socialSystemTitle"],
        backgroundPicture: params["backgroundPicture"],
        maxColumns: tmp,
        guageHeight: tmp1,
        gaugeColor1: tmp2,
        gaugeColor2: tmp3,
        negativeGaugeColor1: tmp4,
        negativeGaugeColor2: parseInt(params["gaugeColor2"], 10),
      }

      //=============================================================================
      // Scene_Map
      //=============================================================================
      let _Scene_Map_initialize = Scene_Map.prototype.initialize
      Scene_Map.prototype.initialize = function () {
        _Scene_Map_initialize.call(this)
      }
      let _Scene_Map_start = Scene_Map.prototype.start
      Scene_Map.prototype.start = function () {
        _Scene_Map_start.call(this)
      }
    }
    static params() {
      return LunaSocialSys.Params;
    }
  }

  $hx_exports["LunaSocialSys"] = LunaSocialSys
  LunaSocialSys.__name__ = true
  Math.__name__ = true
  class SceneMap extends Scene_Map {
    constructor() {
      super();
    }
    initialize() {
      _Scene_Map_initialize.call(this)
    }
    start() {
      _Scene_Map_start.call(this)
    }
  }

  SceneMap.__name__ = true
  class haxe_iterators_ArrayIterator {
    constructor(array) {
      this.current = 0
      this.array = array
    }
    hasNext() {
      return this.current < this.array.length;
    }
    next() {
      return this.array[this.current++];
    }
  }

  haxe_iterators_ArrayIterator.__name__ = true
  class js_Boot {
    static __string_rec(o, s) {
      if (o == null) {
        return "null";
      }
      if (s.length >= 5) {
        return "<...>";
      }
      let t = typeof o
      if (t == "function" && (o.__name__ || o.__ename__)) {
        t = "object"
      }
      switch (t) {
        case "function":
          return "<function>";
        case "object":
          if (o.__enum__) {
            let e = $hxEnums[o.__enum__]
            let n = e.__constructs__[o._hx_index]
            let con = e[n]
            if (con.__params__) {
              s = s + "\t"
              return (
                n +
                "(" +
                (function ($this) {
                  var $r
                  let _g = []
                  {
                    let _g1 = 0
                    let _g2 = con.__params__
                    while (true) {
                      if (!(_g1 < _g2.length)) {
                        break
                      }
                      let p = _g2[_g1]
                      _g1 = _g1 + 1
                      _g.push(js_Boot.__string_rec(o[p], s))
                    }
                  }
                  $r = _g
                  return $r;
                })(this).join(",") +
                ")"
              )
            } else {
              return n;
            }
          }
          if (o instanceof Array) {
            let str = "["
            s += "\t";
            let _g = 0
            let _g1 = o.length
            while (_g < _g1) {
              let i = _g++
              str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i], s);
            }
            str += "]";
            return str;
          }
          let tostr
          try {
            tostr = o.toString
          } catch (_g) {
            return "???";
          }
          if (
            tostr != null &&
            tostr != Object.toString &&
            typeof tostr == "function"
          ) {
            let s2 = o.toString()
            if (s2 != "[object Object]") {
              return s2;
            }
          }
          let str = "{\n"
          s += "\t";
          let hasp = o.hasOwnProperty != null
          let k = null
          for (k in o) {
            if (hasp && !o.hasOwnProperty(k)) {
              continue
            }
            if (
              k == "prototype" ||
              k == "__class__" ||
              k == "__super__" ||
              k == "__interfaces__" ||
              k == "__properties__"
            ) {
              continue
            }
            if (str.length != 2) {
              str += ", \n";
            }
            str += s + k + " : " + js_Boot.__string_rec(o[k], s);
          }
          s = s.substring(1)
          str += "\n" + s + "}";
          return str;
        case "string":
          return o;
        default:
          return String(o);
      }
    }
  }

  js_Boot.__name__ = true

  class utils_Fn {
    static proto(obj) {
      return obj.prototype;
    }
    static updateProto(obj, fn) {
      return fn(obj.prototype);
    }
    static updateEntity(obj, fn) {
      return fn(obj);
    }
  }

  utils_Fn.__name__ = true
  String.__name__ = true
  Array.__name__ = true
  js_Boot.__toStr = {}.toString
  LunaSocialSys.listener = new PIXI.utils.EventEmitter()
  LunaSocialSys.main()
})(
  typeof exports != "undefined"
    ? exports
    : typeof window != "undefined"
    ? window
    : typeof self != "undefined"
    ? self
    : this,
  {}
)

//# sourceMappingURL=Luna_SocialSystemMV.js.map
